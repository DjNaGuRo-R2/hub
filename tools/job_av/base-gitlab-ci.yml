stages:
  - static_tests

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

job_av:
  image: docker:19.03
  stage: static_tests
  services:
    - name: docker:19.03-dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    PIPENV_PIPFILE: tools/job_image/Pipfile
    AV_LOGFILE: "clamav.log"

    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  script:
    - apk add --no-cache python3 py3-pip clamav util-linux
    - pip install --ignore-installed distlib pipenv
    - pipenv install
    # Moving cache into the proper directory
    # See .gitlab-ci.yml for more info about it in `job_av`
    - mkdir -p /var/lib/clamav
    - cp freshclam_db/* /var/lib/clamav/
    # Add cut of `@` for specific image tags (eg: `lighthouse@sha...`)
    - JOB=$(basename ${IMAGE} | cut -d':' -f1 | cut -d'@' -f1)
    - docker create --name ${JOB} ${IMAGE} --entrypoint
    - docker export ${JOB} > ${JOB}.tar
    - mkdir ${JOB}
    - tar -xf ${JOB}.tar -C ${JOB}
    - clamscan -ir ${JOB} --max-filesize=50M > ${JOB}-scan.log 2>&1
    - cat ${JOB}-scan.log
  artifacts:
    paths:
      - "*-scan.log"
    expire_in: 30 days
    when: always
  cache:
    key: "clamav-db"
    paths:
      - freshclam_db
    policy: pull
  parallel:
    matrix:
      - IMAGE: []