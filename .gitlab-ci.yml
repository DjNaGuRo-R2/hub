stages:
  - static_tests
  - build
  - deployment

ci_linter:
  image: golang:1.15.2-alpine3.12
  stage: static_tests
  script:
    - apk add --no-cache git
    - go get gitlab.com/orobardet/gitlab-ci-linter
    - for JOB_PATH in jobs/*; do
    -   JOB=$(basename ${JOB_PATH})
    -   gitlab-ci-linter ${JOB_PATH}/${JOB}.yml
    - done

documentation:
  image:
    name: squidfunk/mkdocs-material:5.2.2
    entrypoint: [""]
  stage: build
  script:
    - pip3 install -r requirements.txt
    - python3 builder/builder.py
    - mkdocs build -d ./public
  artifacts:
    when: always
    expose_as: "Documentation"
    paths:
    - public/

pages:
  stage: deployment
  script:
    - echo 'Deploying on Gitlab pages'
  needs:
    - job: documentation
      artifacts: true
  artifacts:
    paths:
    - public
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

# See https://gitlab.com/gitlab-org/release-cli/-/blob/master/docs/index.md#usage
release:
  image: registry.gitlab.com/gitlab-org/release-cli:v0.1.0
  stage: deployment
  script:
    - apk add --no-cache curl
    - for JOB in jobs/*; do
    -   JOB=$(basename ${JOB})
    -   for VERSION in jobs/${JOB}/versions/*; do
    -     VERSION=$(basename ${VERSION} .md)
    -     OUT=$(curl https://gitlab.com/api/v4/projects/go2scale%2Fhub/releases/${JOB}-${VERSION} | grep '{"message":"403 Forbidden"}')
    -     if [[ $? -eq 0 ]]; then
    -       echo "no release for the version ${VERSION}"
    -       release-cli create --name job-${JOB}-${VERSION}
                                --description $(cat jobs/${JOB}/versions/${VERSION}.md)
                                --tag-name job
                                --ref ${CI_COMMIT_SHA}
                                --assets-link "{\"name\":\"Hub url\",\"url\":\"https://jobs.go2scale.io/${VERSION}/${JOB}.yml\",\"link_type\":\"other\",\"filepath\":\"jobs/${JOB}/${JOB}.yml\"}"
    -     else
    -       echo "release ${VERSION} exists"
    -     fi
    -   done
    - done
