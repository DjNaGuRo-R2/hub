# Job from R2Devops hub --> r2devops.io

stages:
    - static_tests
  
links_checker:
    image: 
        name: peterevans/liche:1.1.1
        entrypoint: [""]
    stage: static_tests
    variables:
        # Variables relative to LICHE tool
        ## Defines in which directory LICHE is looking for files
        LICHE_DIRECTORY: ""
        ## Defines which files it should check
        LICHE_FILES: ""
        ## Exclude links based on regex pattern
        LICHE_EXCLUDE: ""
        ## Add in the report the link which are fine
        LICHE_PRINT_OK: "false"
        ## Custom options
        LICHE_OPTIONS: ""
        ## For a directory defined, search in sub folders for files
        LICHE_RECURSIVE: "true"
        ## Fails the pipeline if LICHE finds a broken link
        FAIL_ON_BROKEN: "false"
        ##
        ROOT_DIRECTORY: ""

        # Defines the name of the report
        REPORT_OUTPUT: "junit-report.xml"
    script:
        - mkdir /liche && cd /liche
        - apk add --update nodejs npm curl && npm install junit-report-builder

        - add_option() { export LICHE_OPTIONS="${LICHE_OPTIONS} ${1}"; }
        - |
            generate_report() {
                cat ${CI_PROJECT_DIR}/linkchecker_logs
                echo "EOF" >> ${CI_PROJECT_DIR}/linkchecker_logs
                curl -s -o /liche/main.cjs https://gitlab.com/r2devops/hub/-/snippets/2044617/raw/master/main.cjs
                node main.cjs "${CI_PROJECT_DIR}" "${CI_PROJECT_DIR}/linkchecker_logs" "${REPORT_OUTPUT}"
                mv ${REPORT_OUTPUT} ${CI_PROJECT_DIR}/${REPORT_OUTPUT}
            }

        - | 
            if [ ! -d ${CI_PROJECT_DIR}/${LICHE_DIRECTORY} ]; then
                echo "Directory specified ${CI_PROJECT_DIR}/${LICHE_DIRECTORY} does not exist, exit"
                exit 1
            fi
            if [ -z ${ROOT_DIRECTORY} ]; then
                export ROOT_DIRECTORY=${LICHE_DIRECTORY}
            fi
            add_option "${CI_PROJECT_DIR}/${LICHE_DIRECTORY} -d ${CI_PROJECT_DIR}/${ROOT_DIRECTORY}"; 
        - |
            if [ ! -z "${LICHE_FILES}" ]; then
                for i in ${LICHE_FILES}; do
                    if [ ! -f ${i} ]; then
                        echo "File ${i} does not exist, exit";
                        exit 1;
                    fi

                    add_option "${CI_PROJECT_DIR}/${i}"
                done
            fi
        - if [ ! -z ${LICHE_EXCLUDE} ]; then add_option "-x \"${LICHE_EXCLUDE}\""; fi
        - if [ ${LICHE_PRINT_OK} = "true" ]; then add_option "-v"; fi
        - if [ ${LICHE_RECURSIVE} = "true" ]; then add_option "-r"; fi
        
        - |
            if liche ${LICHE_OPTIONS} > ${CI_PROJECT_DIR}/linkchecker_logs 2>&1; then
                generate_report;
                echo "No errors so far in in the checked files";
            else
                generate_report;
                echo "Errors found in checked files";
                if [ ${FAIL_ON_BROKEN} = "true" ]; then exit 1; fi
            fi
    artifacts:
        when: always
        paths:
            - ${CI_PROJECT_DIR}/${REPORT_OUTPUT}
        reports:
            junit: ${CI_PROJECT_DIR}/${REPORT_OUTPUT}