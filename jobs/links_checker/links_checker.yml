# Job from R2Devops hub --> r2devops.io

stages:
  - static_tests

links_checker:
  image: 
      name: peterevans/liche:1.1.1
      entrypoint: [""]
  stage: static_tests
  variables:
      LICHE_DIRECTORY: "/"
      LICHE_FILES: ""
      LICHE_EXCLUDE: ""
      LICHE_PRINT_OK: "true"
      LICHE_OPTIONS: ""
      LICHE_RECURSIVE: "true"
      FAIL_ON_BROKEN: "false"
      ROOT_DIRECTORY: ""
      REPORT_OUTPUT: "junit-report.xml"
  script:
      - apk add --update nodejs npm curl && npm install junit-report-builder
      - add_option() { export LICHE_OPTIONS="${LICHE_OPTIONS} ${1}"; }
      - |
          generate_report() {
              cat linkchecker_logs
              echo "EOF" >> linkchecker_logs
              curl -s -O https://gitlab.com/r2devops/hub/-/snippets/2044617/raw/master/main.cjs
              node main.cjs "${CI_PROJECT_DIR}" "linkchecker_logs" "${REPORT_OUTPUT}"
          }

      - | 
          if [ ! -z ${LICHE_DIRECTORY} ]; then 
              if [ ! -d ${LICHE_DIRECTORY} ]; then
                  echo "Directory specified ${LICHE_DIRECTORY} does not exist, exit"
                  exit 1
              fi
              if [ -z ${ROOT_DIRECTORY} ]; then
                  export ROOT_DIRECTORY=${LICHE_DIRECTORY}
              fi
              add_option "${CI_PROJECT_DIR}/${LICHE_DIRECTORY} -d ${CI_PROJECT_DIR}/${ROOT_DIRECTORY}"; 
          fi
      - |
          if [ ! -z "${LICHE_FILES}" ]; then
              for i in ${LICHE_FILES}; do
                  if [ ! -f ${i} ]; then
                      echo "File ${i} does not exist, exit";
                      exit 1;
                  fi

                  add_option "${CI_PROJECT_DIR}/${i}"
              done
          fi
      - if [ ! -z ${LICHE_EXCLUDE} ]; then add_option "-x \"${LICHE_EXCLUDE}\""; fi
      - if [ ${LICHE_PRINT_OK} = "true" ]; then add_option "-v"; fi
      - if [ ${LICHE_RECURSIVE} = "true" ]; then add_option "-r"; fi

      - |
          if liche ${LICHE_OPTIONS} > linkchecker_logs 2>&1; then
              echo "No errors so far in in the checked files";
              generate_report;
          else
              generate_report;
              echo "Errors found in checked files";
              if [ ${FAIL_ON_BROKEN} = "true" ]; then exit 1; fi
          fi
  artifacts:
      when: always
      paths:
          - ${CI_PROJECT_DIR}/${REPORT_OUTPUT}
      reports:
          junit: ${CI_PROJECT_DIR}/${REPORT_OUTPUT}