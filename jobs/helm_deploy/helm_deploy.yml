# "Helm" jobs
# See https://gitlab.com/go2scale/jobs/ for more informations

.helm:
  image: registry.gitlab.com/go2scale/dockerfiles/helm:v0.2.3
  variables:
    CHART_PATH: "./charts/$CI_PROJECT_NAME"
    VALUES_PATH: "./conf/values"
    REGISTRY: "${CI_REGISTRY_IMAGE}"
  script:
    - /run.sh

deploy_review:
  extends: .helm
  stage: review
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: https://${CI_ENVIRONMENT_SLUG}.${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}/
    on_stop: cleanup_review
  except:
    refs:
      - master
    variables:
      - $REVIEW_DISABLE

cleanup_review:
  extends: .helm
  stage: review
  variables:
    GIT_STRATEGY: none
  when: manual
  script:
    - helm ls --all --short -n $KUBE_NAMESPACE | xargs -L1 helm -n $KUBE_NAMESPACE delete
#    - kubectl delete namespace $KUBE_NAMESPACE # TODO: it's forbidden due tu user RBAC
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  allow_failure: true
  except:
    refs:
      - master
    variables:
      - $REVIEW_DISABLE

#test_stage:
#  extends: deploy_stage
#  stage: application_level
#  script:
#    - helm secrets diff upgrade ${CI_PROJECT_PATH_SLUG} ${CHART_PATH} -f ${VALUES_PATH}/${ENV}.yaml -f ${VALUES_PATH}/secrets.${ENV}.yaml --set-string image.tag=${CI_COMMIT_SHORT_SHA} --namespace "$KUBE_NAMESPACE" --allow-unreleased

deploy_stage:
  extends: .helm
  stage: staging
  environment:
    name: staging
    url: https://${CI_ENVIRONMENT_SLUG}.${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}/
  only:
    - master
  except:
    variables:
      - $STAGING_DISABLE

#test_production:
#  extends: deploy_production
#  stage: application_level
#  script:
#    - helm secrets diff upgrade ${CI_PROJECT_PATH_SLUG} ${CHART_PATH} -f ${VALUES_PATH}/${ENV}.yaml -f ${VALUES_PATH}/secrets.${ENV}.yaml --set-string image.tag=${CI_COMMIT_SHORT_SHA} --namespace "$KUBE_NAMESPACE" --allow-unreleased

deploy_production:
  extends: .helm
  stage: production
  environment:
    name: production
    url: https://${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}/
  when: manual
  only:
    - master
  except:
    variables:
      - $PRODUCTION_DISABLE
