# Job from R2Devops hub --> r2devops.io

stages:
  - deploy

aws_s3_sync:
  stage: deploy
  image:
    name: bitnami/aws-cli:2.2.41
    entrypoint: [""]
  variables:
    AWS_ACCESS_KEY_ID: " "
    AWS_SECRET_ACCESS_KEY: " "
    AWS_DEFAULT_REGION: ""
    AWS_ENDPOINT: " "
    SYNC_DIR: "build"
    BUCKET_NAME: " "
    AWS_ACL: " "

    S3_SIGNATURE_VERSION: "s3v4"
    S3_MAX_CONCURRENT_REQUESTS: "100"
    S3_MAX_QUEUE_SIZE: "1000"
    S3_MULTIPART_THRESHOLD: "50MB"
    S3_MULTIPART_CHUNCKSIZE: "10MB"
    S3API_ENDPOINTURL: " "

  script:

    - pip3 install awscli-plugin-endpoint

    - touch new_config_aws
    - export AWS_CONFIG_FILE=new_config_aws

    - aws configure set plugins.endpoint awscli_plugin_endpoint

    - aws configure set region $AWS_DEFAULT_REGION
    # set custom endpoint if populated
    - if [ ! -z ${AWS_ENDPOINT} ]; then
    -   aws configure set default.s3.endpoint_url ${AWS_ENDPOINT}
    - fi

    - aws configure set default.s3.signature_version ${S3_SIGNATURE_VERSION}
    - aws configure set default.s3.max_concurrent_requests ${S3_MAX_CONCURRENT_REQUESTS}
    - aws configure set default.s3.max_queue_size ${S3_MAX_QUEUE_SIZE}
    - aws configure set default.s3.multipart_threshold ${S3_MULTIPART_THRESHOLD}
    - aws configure set default.s3.multipart_chunksize ${S3_MULTIPART_CHUNCKSIZE}

    - if [ ! -z ${S3API_ENDPOINTURL} ]; then
    -   aws configure set default.s3api.endpointurl ${S3API_ENDPOINTURL}
    - fi


    #update the ACL
    - if [ ! -z "$AWS_ACL" ]; then
    -   aws s3api put-bucket-acl $AWS_ACL
    - fi

    #sync to the specified bucket
    - aws s3 sync $SYNC_DIR s3://${BUCKET_NAME}