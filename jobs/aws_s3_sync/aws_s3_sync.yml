# Job from R2Devops hub --> r2devops.io

stages:
  - deploy

aws_s3_sync:
  stage: deploy
  image:
    name: alpine:${IMAGE_TAG}
  variables:
    AWS_ACCESS_KEY_ID: " "
    AWS_SECRET_ACCESS_KEY: " "
    AWS_DEFAULT_REGION: " "
    AWS_BUCKET_NAME: " "
    AWS_ENDPOINT: " "
    AWS_ACL: " "
    SYNC_DIR: "build"
    DELETE_OLD_FILE: "false"

    IMAGE_TAG: "3.13.6"
  script:
    # Installing AWS CLI
    - |
      apk --no-cache add \
        binutils \
        curl \
        && GLIBC_VER=$(curl -s https://api.github.com/repos/sgerrand/alpine-pkg-glibc/releases/latest | grep tag_name | cut -d: -f 2,3 | tr -d \",' ') \
      && curl -sL https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub -o /etc/apk/keys/sgerrand.rsa.pub \
      && curl -sLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VER}/glibc-${GLIBC_VER}.apk \
      && curl -sLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VER}/glibc-bin-${GLIBC_VER}.apk \
      && apk add --no-cache \
        glibc-${GLIBC_VER}.apk \
        glibc-bin-${GLIBC_VER}.apk \
      && curl -sL https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip \
      && unzip -qq awscliv2.zip \
      && aws/install \
      && apk --no-cache del \
        binutils \
        curl
    # Generating the options
    - options=""
    - $([ ! -z ${AWS_ENDPOINT} ]) && options="${options} --endpoint-url ${AWS_ENDPOINT}"
    - $([ ! -z ${AWS_ACL} ]) && options="${options} --acl ${AWS_ACL}"
    - $([ ${DELETE_OLD_FILE} == "true" ]) && options="${options} --delete"
    # Synchronise the directory
    - aws s3 sync ${SYNC_DIR} s3://${AWS_BUCKET_NAME}/ ${options}

