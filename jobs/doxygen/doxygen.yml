stages:
  - build

doxygen:
    image: alpine:3.12.1
    stage: build
    variables:
      ## JOB variables ##
      JOB_DOXYGEN_VERSION: "1.8.18-r0"

      ## DOXYGEN variables ##
      # All variables supported by Doxygen are listed here:https://www.doxygen.nl/manual/config.html
      DOXYGEN_CONFIGFILE: "Doxyfile"

      # The PROJECT_NAME tag is a single word (or a sequence of words surrounded by double-quotes, unless you are using Doxywizard)
      # that should identify the project for which the documentation is generated.
      # This name is used in the title of most generated pages and in a few other places.
      # The default value is: "". Inside the script section if this value is "" it will be replaced by your project name
      DOXYGEN_PROJECT_NAME: ""

      # The INPUT tag is used to specify the files and/or directories that contain documented source files.
      # You may enter file names like myfile.cpp or directories like /usr/src/myproject. Separate the files or directories with spaces.
      DOXYGEN_INPUT: "src/"

      # The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) path into which the generated documentation will be written.
      # If a relative path is entered, it will be relative to the location where doxygen was started.
      # If left blank the current directory will be used.
      DOXYGEN_OUTPUT_DIRECTORY: "./"

      # The OUTPUT_LANGUAGE tag is used to specify the language in which all documentation generated by doxygen is written. Doxygen will use this information to generate all constant output in the proper language.
      # Possible values are: Afrikaans, Arabic, Armenian, Brazilian, Catalan, Chinese, Chinese-Traditional, Croatian, Czech, Danish, Dutch, English (United States), Esperanto, Farsi (Persian), Finnish, French, German, Greek, Hungarian, Indonesian, Italian, Japanese, Japanese-en (Japanese with English messages), Korean, Korean-en (Korean with English messages), Latvian, Lithuanian, Macedonian, Norwegian, Persian (Farsi), Polish, Portuguese, Romanian, Russian, Serbian, Serbian-Cyrillic, Slovak, Slovene, Spanish, Swedish, Turkish, Ukrainian and Vietnamese.
      # The default value is: English.
      DOXYGEN_OUTPUT_LANGUAGE: "English"

      # If the GENERATE_LATEX tag is set to YES, doxygen will generate $\mbox{\LaTeX}$ output.
      # The default value is: YES.
      DOXYGEN_GENERATE_LATEX: "YES"

      # The LATEX_OUTPUT tag is used to specify where the $\mbox{\LaTeX}$ docs will be put. If a relative path is entered the value of OUTPUT_DIRECTORY will be put in front of it.
      # The default directory is: latex.
      # This tag requires that the tag GENERATE_LATEX is set to YES.
      DOXYGEN_LATEX_OUTPUT: "latex/"

      # If the GENERATE_HTML tag is set to YES, doxygen will generate HTML output
      # The default value is: YES.
      DOXYGEN_GENERATE_HTML: "YES"

      # The HTML_OUTPUT tag is used to specify where the HTML docs will be put. If a relative path is entered the value of OUTPUT_DIRECTORY will be put in front of it.
      # The default directory is: html.
      # This tag requires that the tag GENERATE_HTML is set to YES.
      DOXYGEN_HTML_OUTPUT: "documentation_build/"

      # The HTML_EXTRA_STYLESHEET tag can be used to specify additional user-defined cascading style sheets that are included after the standard style sheets created by doxygen.
      # Using this option one can overrule certain style aspects. This is preferred over using HTML_STYLESHEET since it does not replace the standard style sheet and is therefore more robust against future updates.
      # Doxygen will copy the style sheet files to the output directory.
      DOXYGEN_HTML_EXTRA_STYLESHEET: ""

      # The RECURSIVE tag can be used to specify whether or not subdirectories should be searched for input files as well.
      DOXYGEN_RECURSIVE: "NO"

      # The EXCLUDE tag can be used to specify files and/or directories that should be excluded from the INPUT source files.
      # This way you can easily exclude a subdirectory from a directory tree whose root is specified with the INPUT tag.
      # Note that relative paths are relative to the directory from which doxygen is run.
      DOXYGEN_EXCLUDE: ""

      # If the value of the INPUT tag contains directories, you can use the EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude certain files from those directories.
      # Note that the wildcards are matched against the file with absolute path, so to exclude all test directories for example use the pattern */test/*
      DOXYGEN_EXCLUDE_PATTERNS: ""

      # With the PROJECT_LOGO tag one can specify a logo or an icon that is included in the documentation.
      # The maximum height of the logo should not exceed 55 pixels and the maximum width should not exceed 200 pixels.
      # Doxygen will copy the logo to the output directory.
      DOXYGEN_PROJECT_LOGO: ""


    script:
       # Initiate the project name value.
       - if [ -z ${DOXYGEN_PROJECT_NAME} ]; then
       -     export DOXYGEN_PROJECT_NAME="${CI_PROJECT_NAME}"
       - fi
       # Install doxygen
       - apk add --no-cache doxygen==${JOB_DOXYGEN_VERSION}
       # Include config Doxyfile and override default variables
       - if [ ! -f "$DOXYGEN_CONFIGFILE" ]; then
       -   touch ${DOXYGEN_CONFIGFILE}
       -   echo "PROJECT_NAME=${DOXYGEN_PROJECT_NAME}" >> ${DOXYGEN_CONFIGFILE}
       -   echo "INPUT=${DOXYGEN_INPUT}" >> ${DOXYGEN_CONFIGFILE}
       -   echo "OUTPUT_DIRECTORY=${DOXYGEN_OUTPUT_DIRECTORY}" >> ${DOXYGEN_CONFIGFILE}
       -   echo "OUTPUT_LANGUAGE=${DOXYGEN_OUTPUT_LANGUAGE}" >> ${DOXYGEN_CONFIGFILE}
       -   echo "GENERATE_LATEX=${DOXYGEN_GENERATE_LATEX}" >> ${DOXYGEN_CONFIGFILE}
       -   echo "LATEX_OUTPUT=${DOXYGEN_LATEX_OUTPUT}" >> ${DOXYGEN_CONFIGFILE}
       -   echo "GENERATE_HTML=${DOXYGEN_GENERATE_HTML}" >> ${DOXYGEN_CONFIGFILE}
       -   echo "HTML_OUTPUT=${DOXYGEN_HTML_OUTPUT}" >> ${DOXYGEN_CONFIGFILE}
       -   echo "HTML_EXTRA_STYLESHEET=${DOXYGEN_HTML_EXTRA_STYLESHEET}" >> ${DOXYGEN_CONFIGFILE}
       -   echo "RECURSIVE=${DOXYGEN_RECURSIVE}" >> ${DOXYGEN_CONFIGFILE}
       -   echo "EXCLUDE=${DOXYGEN_EXCLUDE}" >> ${DOXYGEN_CONFIGFILE}
       -   echo "EXCLUDE_PATTERNS=${DOXYGEN_EXCLUDE_PATTERNS}" >> ${DOXYGEN_CONFIGFILE}
       -   echo "PROJECT_LOGO=${DOXYGEN_PROJECT_LOGO}" >> ${DOXYGEN_CONFIGFILE}
       - fi
       - doxygen ${DOXYGEN_CONFIGFILE}

    artifacts:
       when: on_success
       expose_as: "Doyxgen build"
       paths:
         - "$DOXYGEN_HTML_OUTPUT"
         - "$DOXYGEN_LATEX_OUTPUT"
