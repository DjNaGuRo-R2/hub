# ############################
# Go2Scale DevSecOps template
# ############################
#
# Some variables must be defined in your CI/CD settings
# (https://docs.gitlab.com/ee/ci/variables/#creating-a-custom-environment-variable):
#   * DOCKER_AUTH_CONFIG: docker auth configuration to access Go2Scale images
#   * BOT_TOKEN: Secret token of bot user to interact with Gitlab API
#   * TEMPLATES_REPO_PASSWORD: If needed, secret password (or token)
#     with read access to templates repository

image: alpine:latest

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""  # https://gitlab.com/gitlab-org/gitlab-runner/issues/4501
  # Go2Scale global variables
  BOT_USER_ID: '' # TODO: use your own BOT ID
  TEMPLATES_REPO_URL: 'gitlab.com/go2scale/templates.git'
  GITLAB_URL: $CI_SERVER_URL

stages:
  - code_level
  - build
  - review
  - application_level
  - staging
  - production
  - performance

include:
  # Gitlab AutoDevops
  - template: Jobs/Build.gitlab-ci.yml
  - template: Security/Container-Scanning.gitlab-ci.yml
  # Go2Scale DevSecOps
  - remote: https://gitlab.com/go2scale/jobs/raw/2020-02-24_1/quality_check.gitlab-ci.yml

container_scanning:
  stage: review

.helm:
  image: registry.gitlab.com/go2scale/dockerfiles/helm:v0.2.1
  variables:
    CHART_PATH: "./charts/$CI_PROJECT_NAME"
    VALUES_PATH: "./conf/values"
    REGISTRY: "${CI_REGISTRY_IMAGE}/$CI_COMMIT_REF_SLUG"
  script:
    - /run.sh

deploy_review:
  extends: .helm
  stage: review
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: https://${CI_ENVIRONMENT_SLUG}.${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}/
    on_stop: cleanup_review
  except:
    refs:
      - master
    variables:
      - $REVIEW_DISABLE

cleanup_review:
  extends: .helm
  stage: review
  variables:
    GIT_STRATEGY: none
  when: manual
  script:
    - helm ls --all --short -n $KUBE_NAMESPACE | xargs -L1 helm -n $KUBE_NAMESPACE delete
#    - kubectl delete namespace $KUBE_NAMESPACE # TODO: it's forbidden due tu user RBAC
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  allow_failure: true
  except:
    refs:
      - master
    variables:
      - $REVIEW_DISABLE

#test_stage:
#  extends: deploy_stage
#  stage: application_level
#  script:
#    - helm secrets diff upgrade ${CI_PROJECT_PATH_SLUG} ${CHART_PATH} -f ${VALUES_PATH}/${ENV}.yaml -f ${VALUES_PATH}/secrets.${ENV}.yaml --set-string image.tag=${CI_COMMIT_SHORT_SHA} --namespace "$KUBE_NAMESPACE" --allow-unreleased

deploy_stage:
  extends: .helm
  stage: staging
  environment:
    name: staging
    url: https://${CI_ENVIRONMENT_SLUG}.${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}/
  only:
    - master
  except:
    variables:
      - $STAGE_DISABLE

#test_production:
#  extends: deploy_production
#  stage: application_level
#  script:
#    - helm secrets diff upgrade ${CI_PROJECT_PATH_SLUG} ${CHART_PATH} -f ${VALUES_PATH}/${ENV}.yaml -f ${VALUES_PATH}/secrets.${ENV}.yaml --set-string image.tag=${CI_COMMIT_SHORT_SHA} --namespace "$KUBE_NAMESPACE" --allow-unreleased

deploy_production:
  extends: .helm
  stage: production
  environment:
    name: production
    url: https://${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}/
  when: manual
  only:
    - master
  except:
    variables:
      - $PRODUCTION_DISABLE
